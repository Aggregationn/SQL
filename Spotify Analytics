# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

1. Query the two songs with the shortest & longest track names, as well as their character lengths
   If there is more than one, choose the one that comes first when ordered alphabetically.

SELECT track_name, MIN(LENGTH(track_name))
FROM BIT_DB.Spotifydata
UNION
SELECT track_name, MAX(LENGTH(track_name))
FROM BIT_DB.Spotifydata
ORDER BY track_name
LIMIT 2

#2. Calculate the average popularity for each artist. 
Then, for each artist with a popularity of 90 or above,
show their name, average popularity and label them a "Top Star".

WITH popular_avg_CTE AS 
(
  SELECT artist_name, AVG (popularity) AS popularity
  FROM Spotifydata
  WHERE popularity >= 90
  GROUP BY artist_name
)

SELECT popularity, artist_name, 'Top Star' AS tag
FROM popular_avg_CTE
GROUP BY artist_name
ORDER BY popularity DESC
;

#3. What is the avg popularity, danceability, and energy by artist and track?

SELECT
AVG (danceability),
AVG (popularity),
AVG (energy),
track_id,
artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_id
;

#4. Who are the top 10 artists based on popularity?

SELECT popularity, artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10
;

#5. What artist released the longest song?

SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1
;

#6. What's the average danceability for the 10 most popular songs?

SELECT AVG (danceability) AS avg_danceability, track_name, popularity
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10
;

#7. What song had the most tempo with the loudness being greater then -4?

SELECT track_name, MAX(tempo), loudness
FROM BIT_DB.Spotifydata
WHERE loudness > '-4'
GROUP BY track_name
ORDER BY MAX(tempo) DESC
;
